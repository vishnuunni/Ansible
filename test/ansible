#!/bin/bash
 echo ""
 echo "    /_\   _ __   ___ (_)| |__  | |  ___ "
 echo "   //_\\  | '_ \ / __|| || '_ \ | | / _ \                                                  auth: [ vishnu.u@cloud2scale.com ]" 
 echo "  // - \\ |_| | ||___/|_||_.__/ |_| \__| "
 echo ""
 echo "-------------------------------------------"
whoami=`whoami`
path=/home/$whoami/Ansible_automation
home=/home/$whoami
textreset=$(tput sgr0)
red=$(tput setaf 1)
green=`tput setaf 2`

 echo ""
#sudo chmod +x aansible
#sudo cp aansible /usr/bin

#functions------------
check()
     {  
 echo "  Checking for configurations..."     
 if [ -d "$path" ]
  then
   true
  else
   mkdir $path
 fi

 echo "  Checking for playbook..."
 echo "  Please holdon"
 sleep 1
file1=$path/ansible.cfg
file2=$path/hosts_pkg
file3=$path/pkg.yml
f1name=ansible.cfg
f2name=hosts_pkg
f3name=pkg.yml
        
# if [ -f "$file1" ]
#  then
#   true
#  else
#   echo "  [warning: $f1name not found]"
#   echo "  Updating $f1name"
#   echo ""
   #touch $path/ansible.cfg
#   wget https://raw.githubusercontent.com/vishnuunni/wget/master/ansible.cfg -P $path
#   echo "  [warning: Updated $f1name]"
# fi

# if [ -f "$file2" ]
#  then
#   true
#  else
#   echo "  [warning: $f2name not found]"
#   echo "  Updating $f2name"
#   echo ""
#   wget https://raw.githubusercontent.com/vishnuunni/wget/master/hosts_pkg -P $path
#   echo ""
#   echo "  [warning: Updated $f2name]"
# fi

# if [ -f "$file3" ]
#  then
#   true
#  else
#   echo "  [warning: $f3name not found]"
#   echo "  Updating $f3name"
#   echo ""
#   wget https://raw.githubusercontent.com/vishnuunni/wget/master/pkg.yml -P $path
#   echo ""
#   echo "  [warning: Updated $f3name]"
# fi

 if [[ (-f "$file1" && -f "$file2" && -f "$file3") ]];
  then
   echo "  Play configurations found..."
  else
   echo "  Configurations not updating                                                      [error!]"
   echo "  Provide needed file under $path                                                  [exit]"
   exit
 fi

      }

pkg_install()
      {
 echo > $path/pkg.yml
 echo "---" >> $path/pkg.yml
 echo "- hosts: hosts_pkg" >> $path/pkg.yml
 echo "  become: yes" >> $path/pkg.yml
 echo "  gather_facts: no" >> $path/pkg.yml
 echo "" >> $path/pkg.yml
 echo "" >> $path/pkg.yml
 echo "  tasks:" >> $path/pkg.yml
 echo "         - name: Install $pkg" >> $path/pkg.yml
 echo "           apt: name=$pkg state=latest" >> $path/pkg.yml
      }

file_transafer()
      {
 echo ""
 echo "  You have selected to transfer file                   [OK]"
 echo ""
 echo -n "  Do you want to search for files [y/n] ? : "
 read ftinput
 if [ $ftinput = y  ]
  then
   echo ""
   echo -n "  Please enter the filename to search : "
   read ftinput2
   echo ""
   ftfind=`find /home/$whoami -name *$ftinput2* -not -path '*/\.*' 2>&1 | grep -v "Permission denied"`
    if [ -z "$ftfind" ]
     then
      echo ""
      echo "  No Match !"
      exit
     else
      echo "$ftfind"
      echo ""
      echo "  Above are the matching file."
      echo "  Please enter the complete path        [warning]"
      echo ""
      echo -n "  File path (complete path) : "
      read ftpath
       if [ -f $ftpath ]
        then
         echo "  You have selected $ftpath"
	 echo ""
	 ftpath_f
 	 transfer_host
        else
        #echo "  File not found !"
        exit
       fi
    fi
  else
   echo -n "  Please enter the full path : "
   read ftfull
         if [ -f $ftfull ]
          then
           echo "  You have selected $ftfull"
	   echo ""
	   ftfull_f
	   transfer_host
          else
           echo "  File not found !"
           exit
         fi
 fi
      }

ftpath_f()
      {
 touch $path/transfer.yml
 echo > $path/transfer.yml
 echo "---" >> $path/transfer.yml
 echo "- hosts: hosts_transfer" >> $path/transfer.yml
 echo "  become: yes" >> $path/transfer.yml
 echo "  gather_facts: no" >> $path/transfer.yml
 echo "" >> $path/transfer.yml
 echo "" >> $path/transfer.yml
 echo "  tasks:" >> $path/transfer.yml
 echo "         - name: Transfer file " >> $path/transfer.yml
#echo "           copy:" >> $path/transfer.yml
#echo "            src: $ftpath" >> $path/transfer.yml
#echo "            dest: /home/c2s" >> $path/transfer.yml
 echo "           template: src=$ftpath dest=/home/c2s" >> $path/transfer.yml
      }


ftfull_f()

      {

 touch $path/transfer.yml
 echo > $path/transfer.yml
 echo "---" >> $path/transfer.yml
 echo "- hosts: hosts_transfer" >> $path/transfer.yml
 echo "  become: yes" >> $path/transfer.yml
 echo "  gather_facts: no" >> $path/transfer.yml
 echo "" >> $path/transfer.yml
 echo "" >> $path/transfer.yml
 echo "  tasks:" >> $path/transfer.yml
 echo "         - name: Transfer file " >> $path/transfer.yml
#echo "           copy:" >> $path/transfer.yml
#echo "            src: $ftfull" >> $path/transfer.yml
#echo "            dest: /home/c2s" >> $path/transfer.yml
 echo "           template: src=$ftfull dest=/home/c2s" >> $path/transfer.yml

      }

transfer_host()

      {

 echo -n "  Please enter the server ip you want to trigger : "
 read thip
 touch $path/hosts_transfer
 echo > $path/hosts_transfer
 echo "[hosts_transfer]" >> $path/hosts_transfer
 echo "" >> $path/hosts_transfer
 echo "$thip" >> $path/hosts_transfer
 echo -n "  Do you want to enter more ip's [y/n]? : "
 read thy
 if [ $thy = y ]
  then
   echo "  Opening the file..."
   sleep 1
   vi $path/hosts_transfer
   sleep 1
   echo "  Proceeding..."
  else
   echo "  Proceeding..."
 fi

      }

script_transfer_host()

      {

 echo -n "  Please enter the server ip you want to trigger : "
 read sthip
 touch $path/hosts_script_transfer
 echo > $path/hosts_script_transfer
 echo "[hosts_script_transfer]" >> $path/hosts_script_transfer 
 echo "" >> $path/hosts_script_transfer
 echo "$sthip" >> $path/hosts_script_transfer
 echo -n "  Do you want to enter more ip's [y/n]? : "
 read sthy
 if [ $sthy = y ]
  then
   echo "  Opening the file..."
   sleep 1
   vi $path/hosts_script_transfer
   sleep 1
   echo "  Proceeding..."
 else
   echo "  Proceeding..."
 fi

      }

 remote_script_x()
      {
 echo "" 
 echo "  You have selected to execute script on remote server... "
 echo ""
 echo -n "  Do you want to search for files [y/n] ? : "
 read scrinput
 if [ $scrinput = y  ]
  then
  # echo ""
   echo -n "  Please enter the filename to search : "
   read scrinput2
   echo ""
   scrfind=`find /home/$whoami -name *$scrinput2* -not -path '*/\.*' 2>&1 | grep -v "Permission denied"`
   if [ -z "$scrfind" ]
    then
     echo ""
     echo "  No Match !"
     exit
   else
    echo "$scrfind"
    echo ""
    echo "  Above are the matching file."
    echo "  Please enter the complete path        [warning]"
    echo ""
    echo -n "  File path (complete path) : "
    read scrpath
    if [ -f $scrpath ]
     then
      echo "  You have selected $scrpath"
      echo ""
      echo "  Creating playbook..."
      echo ""
      touch $path/script_transfer.yml
      echo > $path/script_transfer.yml
      echo "---" >> $path/script_transfer.yml
      echo "- hosts: hosts_script_transfer" >> $path/script_transfer.yml 
      echo "  become: yes" >> $path/script_transfer.yml
      echo "  gather_facts: no" >> $path/script_transfer.yml
      echo "" >> $path/script_transfer.yml
      echo "" >> $path/script_transfer.yml
      echo "  tasks:" >> $path/script_transfer.yml
      echo "         - name: Transfer file " >> $path/script_transfer.yml
      echo -n "  Name this script in destination as : "
      read scriptname
      echo "           template: src=$scrpath dest=/home/c2s/$scriptname mode=0755" >> $path/script_transfer.yml
      echo "" >> $path/script_transfer.yml
      echo "" >> $path/script_transfer.yml
      echo "         - name: Executing as script" >> $path/script_transfer.yml
     # echo -n "   Please name this script as : "
     # read scriptname
      echo "           command: sh /home/c2s/$scriptname" >> $path/script_transfer.yml
      script_transfer_host
     else
 #echo "  File not found !"
     exit
    fi
   fi
   else
 echo -n "  Please enter the full path : "
 read scrfull
 if [ -f $scrfull ]
 then
 echo "  You have selected $scrfull"
 echo ""
 echo "  Creating playbook..."
 echo ""
 touch $path/script_transfer.yml
 echo > $path/script_transfer.yml
 echo "---" >> $path/script_transfer.yml
 echo "- hosts: hosts_script_transfer" >> $path/script_transfer.yml
 echo "  become: yes" >> $path/script_transfer.yml
 echo "  gather_facts: no" >> $path/script_transfer.yml
 echo "" >> $path/script_transfer.yml
 echo "" >> $path/script_transfer.yml
 echo "  tasks:" >> $path/script_transfer.yml
 echo "         - name: Transfer file " >> $path/script_transfer.yml
 echo -n "  Name this script in destination as : "
 read scriptname
 echo "           template: src=$scrfull dest=/home/c2s/$scriptname mode=0755" >> $path/script_transfer.yml
 echo "" >> $path/script_transfer.yml
 echo "" >> $path/script_transfer.yml
 echo "         - name: Executing as script" >> $path/script_transfer.yml
# echo -n "  Please name this script as : "
# read scriptname
 echo "           command: sh /home/c2s/$scriptname" >> $path/script_transfer.yml
 script_transfer_host 
 else
 echo "  File not found !"
 exit
 fi
 fi

 }

# echo "  Creating playbook..."
# echo ""
# touch $path/script_transfer.yml
# echo > $path/script_transfer.yml
# echo "---" >> script_transfer.yml
# echo "- hosts: hosts_script_transfer" >> $path/script_transfer.yml
# echo "  become: yes" >> $path/script_transfer.yml
# echo "  gather_facts: no" >> $path/script_transfer.yml
# echo "" >> $path/script_transfer.yml
# echo "" >> $path/script_transfer.yml
# echo "  tasks:" >> $path/script_transfer.yml
# echo "         - name: Transfer file " >> $path/script_transfer.yml
# echo "           template: src=$scrpath dest=/home/c2s mode=0755" >> $path/script_transfer.yml
# echo "         - name: Executing as script" >> $path/script_transfer.yml
# echo -n "   Please name this script as : "
# read scriptname
# echo "           command: sh /home/c2s/$scriptname" >> $path/script_transfer.yml
#else











#front----------
#echo " ----------------------------------------"
 echo ""
 echo "     Hai Welcome ${green} $whoami ;) ${textreset}"
 sleep 3
 echo ""
 echo ""
 echo "  Checking for Ansible configurations"

 if [ -f "$path/ansible.cfg" ]
  then
   true
   cd $path
  else
   mkdir $path
   cd $path
   echo "  Ansible.cfg not found !      [warning]"
   echo "  Creating one...              [OK]" 
   touch $path/ansible.cfg
   echo ""
   echo "[defaults]" >> $path/ansible.cfg
   echo "private_key_file = $home/c2s_sshkey" >> $path/ansible.cfg
   echo "host_key_checking = False." >> $path/ansible.cfg
   echo "remote_user = c2s" >> $path/ansible.cfg
   echo "become = True" >> $path/ansible.cfg
   echo "become_user = root" >> $path/ansible.cfg
   echo "  Done with configuration"
 fi

 sleep 1
 echo ""
 echo "  Checking for c2s_sshkey..."
 sleep 1
 if [ -f "$home/c2s_sshkey" ]
  then 
   echo "  Key found..."
   true
  else
   echo "  Updating key.."
   wget https://raw.githubusercontent.com/vishnuunni/wget/master/c2s_sshkey -P $home
   echo "  Key Updated"
 fi

 sleep 1
 echo ""
 echo "  These are the options :-"
 echo ""
 echo "  1. Package Installation"
 echo "  2. File Transfer"
 echo "  3. Script execution"
 echo ""
 echo -n "  Enter an option : "
 read ipt1
 if [ $ipt1 = 1 ]
  then
   echo "  Package install selected                                                     [OK]"
  # check
   echo ""
   echo -n "  Enter the package name : "
   read pkg
   echo -n "  Proceed with '$pkg' installation ? [y/n] :"
   read input
   if [ $input = "y" ]
    then
     echo "  Proceeding with $pkg installation"
    else
     echo "  Cancelled"
     echo ""
     sleep 1
     exit
   fi

 if [ -d "$path" ]
  then
   true
   cd $path
  else
   mkdir $path
 fi
 cd $path
 echo ""

#echo -n "  Do you have a host file already [y/n]?"
#read hosty
#if [ $hosty = y ]
#then
#echo -n "  Enter the file name here : "
#read hostfile
# if [ -f "$hostfile" ]
# then
# true
# else
# echo "  File not Found..."
# fi
#else

 echo -n "  Please enter the server ip you want to trigger : "
 read ip
 echo > $path/hosts_pkg
 echo "[hosts_pkg]" >> $path/hosts_pkg
 echo "" >> $path/hosts_pkg
 echo "$ip" >> $path/hosts_pkg
 echo -n "  Do you want to enter more ip's [y/n]? : "
 read y
 if [ $y = y ]
  then
   echo "  Opening the file..."
   sleep 1
   vi $path/hosts_pkg
   sleep 1
   echo "  Proceeding..."
  else
   echo "  Proceeding..."
 fi

pkg_install
check
ansible-playbook -i hosts_pkg pkg.yml

 else
   if [ $ipt1 = 2 ]
    then
     file_transafer
     ansible-playbook -i hosts_transfer transfer.yml
    else
     if [ $ipt1 = 3 ] 
      then

       remote_script_x
       ansible-playbook -i hosts_script_transfer script_transfer.yml
      else
       echo "  Invalid Option !"
       echo "  Exiting..."
       echo ""
       exit
      fi
   fi
   fi
